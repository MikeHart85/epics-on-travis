language: cpp

env:
  matrix:
    - VERSION_FILE=R3_14_12.sh
    - VERSION_FILE=R3_15.sh
    - VERSION_FILE=R3_16.sh
    - VERSION_FILE=R7_0.sh

dist: trusty
addons:
  apt:
    packages:
      - perl
      - re2c
      - autoconf  # pvaPy
      - libboost-all-dev  # pvaPy
      - procserv  # optional, used by ci-scripts/run-epics-iocs-on-procserv.sh

cache:
  directories:
    - $HOME/.ccache  # https://github.com/travis-ci/travis-ci/issues/5853

script:
  - export CI_SCRIPTS="${TRAVIS_BUILD_DIR}/ci-scripts"
  - source versions/$VERSION_FILE
  - export WITH_NETCDF=YES
  - export WITH_HDF5=YES
  - source "${CI_SCRIPTS}/epics-config.sh"
  - bash "${CI_SCRIPTS}/install-epics-base.sh"
  - if [[ ! -z "${PVA}" ]]; then 
        bash "${CI_SCRIPTS}/install-epics-v4.sh";
    fi
  - bash "${CI_SCRIPTS}/install-epics-modules.sh"
  - if [[ ! -z "${AREADETECTOR_VER}" ]]; then
        bash "${CI_SCRIPTS}/install-epics-areadetector.sh";
    fi
  - bash "${CI_SCRIPTS}/install-epics-iocs.sh"

  # for projects using the pyepics test IOC and motorsim IOC:
  # - bash "${CI_SCRIPTS}/run-epics-iocs-on-procserv.sh"
  # - pip install pyepics numpy
  # - bash ${CI_SCRIPTS}/run-pyepics-simulator.sh procserv

  - ldd ~/epics/${BASE_VER}/base/bin/linux-x86_64/caget
  - ldd ~/epics/${BASE_VER}/iocs/pyepics-test-ioc/bin/linux-x86_64/testioc
  - ldd ~/epics/${BASE_VER}/iocs/motorsim/bin/linux-x86_64/mtrSim
  - if [[ ! -z "${AREADETECTOR_VER}" ]]; then
      ldd ~/epics/${BASE_VER}/support/areadetector/${AREADETECTOR_VER}/ADSimDetector/iocs/simDetectorIOC/bin/linux-x86_64/simDetectorApp;
    fi

  - export VERSION_TAG=${BASE_VER}_pva${PVA}_areadetector${AREADETECTOR_VER}_motor${MOTOR_VER}
  - |
    cat <<EOF > $HOME/epics/versions.sh
    #!/bin/bash
    export BASE_VER=${BASE_VER}
    export PVA=${PVA}
    export BUSY_VER=${BUSY_VER}
    export SEQ_VER=${SEQ_VER}
    export ASYN_VER=${ASYN_VER}
    export CALC_VER=${CALC_VER}
    export AUTOSAVE_VER=${AUTOSAVE_VER}
    export SSCAN_VER=${SSCAN_VER}
    export MOTOR_VER=${MOTOR_VER}
    export AREADETECTOR_VER=${AREADETECTOR_VER}
    export EOT_STATIC_BUILD=${STATIC_BUILD}
    export EOT_VERSION_TAG=${VERSION_TAG}
    EOF

  - export FILE_TO_UPLOAD="${TRAVIS_BUILD_DIR}/epics-ci-${TRAVIS_TAG}_${VERSION_TAG}.tar.bz2"
  - tar cfj ${FILE_TO_UPLOAD} $HOME/epics

deploy:
    provider: releases
    api_key: $GITHUB_OAUTH_TOKEN
    skip_cleanup: true
    file_glob: true
    file: "${FILE_TO_UPLOAD}"
    on:
      tags: true
