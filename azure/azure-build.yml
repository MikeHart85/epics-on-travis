# vi: sw=2 ts=2 sts=2 expandtab

parameters:
  name: ''
  vmImage: ''

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      R3.14.12:
        VERSION_FILE: 'R3_14_12.sh'
        EPICS_HOST_ARCH: ${{ parameters.epics_host_arch }}
      # R3.15:
      #   VERSION_FILE: 'R3_15.sh'
      #   EPICS_HOST_ARCH: ${{ parameters.epics_host_arch }}
      # R3.16:
      #   VERSION_FILE: 'R3_16.sh'
      #   EPICS_HOST_ARCH: ${{ parameters.epics_host_arch }}
      R7.0:
        VERSION_FILE: 'R7_0.sh'
        EPICS_HOST_ARCH: ${{ parameters.epics_host_arch }}
    maxParallel: 4

  steps:
  - bash: |
      brew install re2c
    displayName: 'Install dependencies (Darwin/OSX)'
    condition: eq(variables['agent.os'], 'Darwin')

  - bash: |
      sudo apt install re2c libreadline-dev
    displayName: 'Install dependencies (Linux)'
    condition: eq(variables['agent.os'], 'Linux')

  - bash: |
      CI_TOP=$PWD

      pushd ci-scripts
      mv epics-config.sh epics-config.sh.orig
      echo "export CI_TOP=$CI_TOP" > epics-config.sh
      echo 'export CI_SCRIPTS=$CI_TOP/ci-scripts' >> epics-config.sh
      cat "../versions/${VERSION_FILE}" >> epics-config.sh
      cat epics-config.sh.orig >> epics-config.sh
      echo "set -x -e" >> epics-config.sh
      popd
    displayName: 'Dependencies'

  - bash: |
      source "ci-scripts/epics-config.sh"
      bash "${CI_SCRIPTS}/install-epics-base.sh"
    displayName: 'Install EPICS base'

  - bash: |
      source "ci-scripts/epics-config.sh"
      if [[ ! -z "${PVA}" ]]; then
         bash "${CI_SCRIPTS}/install-epics-v4.sh";
      fi
    displayName: 'Install V4/pvAccess'

  - bash: |
      source "ci-scripts/epics-config.sh"
      bash "${CI_SCRIPTS}/install-epics-modules.sh"
    displayName: 'Install supporting modules'

  - bash: |
      source "ci-scripts/epics-config.sh"
      export WITH_NETCDF=YES
      export WITH_HDF5=YES
      if [[ ! -z "${AREADETECTOR_VER}" ]]; then
         bash "${CI_SCRIPTS}/install-epics-areadetector.sh";
      fi
    displayName: 'Install AreaDetector'

  - bash: |
      source "ci-scripts/epics-config.sh"
      bash "${CI_SCRIPTS}/install-epics-iocs.sh"
    displayName: 'Install IOCs'

  - bash: |
      source "ci-scripts/epics-config.sh"
      export GIT_TAG=$(git describe --tag)
      export VERSION_TAG=${BASE_VER}_pva${PVA}_areadetector${AREADETECTOR_VER}_motor${MOTOR_VER}
      export FILE_TO_UPLOAD="${HOME}/epics-ci-${EPICS_HOST_ARCH}-${GIT_TAG}_${VERSION_TAG}.tar.bz2"
      echo $FILE_TO_UPLOAD

      # Reduce the deployed package size a bit:
      rm -rf $SNCSEQ_PATH/lib    $SNCSEQ_PATH/bin
      rm -rf $AUTOSAVE_PATH/lib  $AUTOSAVE_PATH/bin
      rm -rf $SSCAN_PATH/lib     $SSCAN_PATH/bin
      rm -rf $BUSY_PATH/lib      $BUSY_PATH/bin
      rm -rf $ASYN_PATH/lib      $ASYN_PATH/bin
      rm -rf $CALC_PATH/lib      $CALC_PATH/bin
      rm -rf $MOTOR_PATH/lib     $MOTOR_PATH/bin
      # find $AREA_DETECTOR_PATH -type f -name "*.a" -delete
      # find $AREA_DETECTOR_PATH -type f -name "*.so" -delete
      # find $AREA_DETECTOR_PATH -type f -name "*.dylib" -delete
      # tar cfj ${FILE_TO_UPLOAD} ${EPICS_ROOT} --exclude=${EPICS_ROOT}/modules
    displayName: 'Package'
